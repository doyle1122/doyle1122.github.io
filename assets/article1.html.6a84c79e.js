import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as i,c as l,a as s,b as t,d as n,e}from"./app.16dbae50.js";var c="/assets/images1.219c1a77.png";const u={},r=n("\u7FFB\u8BD1\u7684\u5730\u5740 "),d={href:"https://blog.josejg.com/debugging-pretty/",target:"_blank",rel:"noopener noreferrer"},k=n("https://blog.josejg.com/debugging-pretty/"),v=e(`<h1 id="debugging-by-pretty-printing" tabindex="-1"><a class="header-anchor" href="#debugging-by-pretty-printing" aria-hidden="true">#</a> Debugging by Pretty Printing</h1><p>\u672C\u5B66\u671F\uFF0C\u6211\u662F\u9EBB\u7701\u7406\u5DE5\u5B66\u96626.824\u5206\u5E03\u5F0F\u7CFB\u7EDF\u8BFE\u7A0B\u7684\u6559\u5B66\u52A9\u7406 \u8BE5\u8BFE\u7A0B\u8981\u6C42\u5B66\u751F\u8FED\u4EE3\u5B9E\u73B0\u5206\u5E03\u5F0F\u5171\u8BC6\u534F\u8BAERaft\u3002 \u8FD9\u662F\u4E00\u9879\u975E\u5E38\u5177\u6709\u6311\u6218\u6027\u7684\u4EFB\u52A1\uFF0C\u56E0\u4E3A\u5C3D\u7BA1Raft\u58F0\u79F0\u81EA\u5DF1\u4EE5\u201C\u66F4\u5BB9\u6613\u7406\u89E3Paxos\u201D\u800C\u95FB\u540D\uFF0C\u4F46Raft\u662F\u4E00\u4E2A\u590D\u6742\u7684\u5206\u5E03\u5F0F\u7CFB\u7EDF\uFF0C\u5373\u4F7F\u7ECF\u8FC7\u51E0\u6B21\uFF08\u6216\u591A\u6B21\uFF09\u5C1D\u8BD5\uFF0C\u4E5F\u5F88\u96BE\u6B63\u786E\u3002\u5F53\u6211\u4E0A6.824\u65F6\uFF0C\u6211\u6CE8\u610F\u5230\u5B8C\u6210\u5B9E\u9A8C\u5BA4\u7684\u74F6\u9888\u4ECE\u6765\u5C31\u4E0D\u662F\u4E3A\u76F8\u5E94\u7684\u5B9E\u9A8C\u5BA4\u505A\u5927\u90E8\u5206\u5FC5\u8981\u7684\u5B9E\u73B0\u3002\u603B\u7684\u6765\u8BF4\uFF0C\u6211\u82B1\u7684\u5927\u90E8\u5206\u65F6\u95F4\u662F\u8FD0\u884C\u5931\u8D25\u5E76\u89E3\u6790\u65E5\u5FD7\uFF0C\u4EE5\u4E86\u89E3\u7CFB\u7EDF\u662F\u5982\u4F55\u5931\u8D25\u7684\uFF0C\u51FA\u4E86\u4EC0\u4E48\u95EE\u9898\u3002</p><p>\u5728\u8FD9\u7BC7\u6587\u7AE0\u4E2D\uFF0C\u6211\u4E0D\u4F1A\u8BA8\u8BBA\u5E38\u89C1\u7684\u9519\u8BEF\u6216\u8005Raft\u5B9E\u73B0\u65F6\u901A\u5E38\u662F\u5982\u4F55\u51FA\u9519\u7684\uFF0C\u5982\u679C\u60A8\u5BF9\u6B64\u611F\u5174\u8DA3\uFF0C\u8BF7\u67E5\u770B\u975E\u5E38\u5B9E\u7528\u7684Raft\u5B66\u751F\u6307\u5357\u3002\u6211\u5C06\u4ECB\u7ECD\u5982\u4F55\u7F16\u5199\u5DE5\u5177\uFF0C\u8BA9\u60A8\u8C03\u8BD5\u5206\u5E03\u5F0F\u7CFB\u7EDF\u66F4\u52A0\u8F7B\u677E\u3002\u6211\u4EEC\u5C06\u4E86\u89E3\u5982\u4F55\u4ECE\u5934\u5F00\u59CB\u6784\u5EFA\u8FD9\u4E9B\u57FA\u4E8E\u7EC8\u7AEF\u7684\u5DE5\u5177\uFF0C\u6700\u540E\u4F7F\u7528\u8C03\u8BD5\u5957\u4EF6\uFF0C\u8BE5\u5957\u4EF6\u5C06\u8BA9\u60A8\u66F4\u6709\u6548\u5730\u68C0\u6D4B\u3001\u7406\u89E3\u548C\u4FEE\u590D6.824\u5B9E\u9A8C\u5BA4\u7684\u9519\u8BEF\u30026.824\u4E2D\u7684\u6240\u6709\u5B9E\u9A8C\u5BA4\u90FD\u4EE5\u540C\u6837\u7684\u65B9\u5F0F\u8C03\u8BD5\uFF0C\u56E0\u6B64\u82B1\u4E00\u4E9B\u65F6\u95F4\u6765\u51CF\u5C11\u6536\u96C6\u548C\u89E3\u6790\u65E5\u5FD7\u53EF\u80FD\u662F\u4E00\u4E2A\u597D\u4E3B\u610F\u3002</p><h2 id="debugging-distributed-code-hits-different" tabindex="-1"><a class="header-anchor" href="#debugging-distributed-code-hits-different" aria-hidden="true">#</a> Debugging distributed code hits different</h2><p>\u8C03\u8BD5\u5206\u5E03\u5F0F\u7CFB\u7EDF\u662F\u8BB8\u591A\u5B66\u751F\u5728\u63A5\u53D76.824\u4E4B\u524D\u6CA1\u6709\u5904\u7406\u8FC7\u7684\u4EFB\u52A1\uFF0C\u5B83\u4E0E\u5176\u4ED6\u5F62\u5F0F\u7684\u8C03\u8BD5\u6709\u6839\u672C\u4E0D\u540C\u3002\u6CA1\u6709\u50CFgdb\u6216pdb\u8FD9\u6837\u7684\u6613\u4E8E\u8BBF\u95EE\u7684\u8C03\u8BD5\u5668\u53EF\u4EE5\u8BA9\u60A8\u9010\u6B65\u8FD0\u884C\u4EE3\u7801\u3002\u4F20\u7EDF\u7684printf\u8C03\u8BD5\u4E5F\u6709\u4E0D\u8DB3\uFF0C\u56E0\u4E3A\u53EF\u4EE5\u6709\u5927\u91CF\u7684\u4F8B\u7A0B\u5E76\u884C\u8FD0\u884C\uFF08\u56E0\u6B64\u4E5F\u53EF\u4EE5\u6253\u5370\uFF09\u3002\u5728\u4F20\u7EDF\u7CFB\u7EDF\u4E2D\uFF0C\u901A\u8FC7\u6253\u5370\u8BED\u53E5\u8C03\u8BD5\u76F8\u5F53\u7B80\u5355\uFF0C\u56E0\u4E3A\u901A\u5E38\u53EA\u6709\u4E00\u4E2A\u6267\u884C\u7EBF\u7A0B\uFF0C\u4EBA\u4EEC\u53EF\u4EE5\u5FEB\u901F\u63A8\u7406\u6B63\u5728\u53D1\u751F\u7684\u4E8B\u60C5\u3002</p><p>\u5BF9\u4E8E\u50CF6.824\u5B9E\u9A8C\u5BA4\u8FD9\u6837\u7684\u5206\u5E03\u5F0F\u7CFB\u7EDF\uFF0C\u6709N\u53F0\u673A\u5668\uFF0C\u6BCF\u53F0\u673A\u5668\u90FD\u5728\u540C\u65F6\u6267\u884C\u51E0\u4E2A\u7EBF\u7A0B\u3002\u4F8B\u5982\uFF0C\u5728Raft\u9A8C\u5BA4\uFF0C\u6709N\u4E2Apeers\u5E76\u884C\u6267\u884C\uFF0C\u5C31\u597D\u50CF\u4ED6\u4EEC\u5728\u5355\u72EC\u7684\u673A\u5668\u4E2D\u4E00\u6837\u3002\u5BF9\u4E8E\u6BCF\u4E2Apeers\uFF0C\u5C06\u6709\u591A\u4E2A\u7A0B\u5E8F\u5E76\u884C\u6267\u884C\uFF08\u901A\u5E38\u662F\u4E00\u4E2A\u6216\u4E24\u4E2A\u8BA1\u65F6\u5668\u3001\u4E00\u4E2A\u5E94\u7528\u5668\u548C\u4E00\u4E9BRPC\u548CRPC\u56DE\u590D\u5904\u7406\u7A0B\u5E8F\uFF09\uFF0C\u5BFC\u81F4\u5927\u91CF\u7684\u5E76\u53D1\u3002\u867D\u7136\u6DFB\u52A0\u6253\u5370\u8BED\u53E5\u5F88\u5BB9\u6613\uFF0C\u4F46\u89E3\u6790\u5B83\u4EEC\u53EF\u80FD\u76F8\u5F53\u68D8\u624B\uFF0C\u7279\u522B\u662F\u56E0\u4E3A\u5B9E\u9A8C\u5BA4\u7684\u590D\u6742\u6027\u4E00\u5468\u53C8\u4E00\u5468\u5730\u6162\u6162\u589E\u52A0\u3002\u8BDD\u867D\u5982\u6B64\uFF0C\u6D4F\u89C8\u65E5\u5FD7\u4EE5\u8BC6\u522B\u903B\u8F91\u4E2D\u7684\u9519\u8BEF\u662F\u60A8\u964D\u4EF7\u65F6\u95F4\u7684\u6700\u4F73\u9009\u62E9\u3002\u76EF\u7740\u4F60\u7684\u4EE3\u7801\u6216\u53CD\u590D\u8C03\u6574\u4E0D\u540C\u7684\u90E8\u5206\u5728\u77ED\u671F\u5185\u53EF\u80FD\u4F1A\u6709\u6240\u5E2E\u52A9\uFF0C\u4F46bug\u9700\u8981\u66F4\u4ED4\u7EC6\u7684\u5206\u6790\u3002</p><p>\u6B64\u5916\uFF0C\u5728\u50CFRaft\u8FD9\u6837\u7684\u7CFB\u7EDF\u4E2D\uFF0C\u4E0D\u4EC5\u6709\u591A\u4E2A\u7EBF\u7A0B\u540C\u65F6\u6253\u5370\u8F93\u51FA\uFF0C\u800C\u4E14\u4F1A\u6253\u5370\u5F02\u6B65\u7684\u4E8B\u4EF6\uFF0C\u4F8B\u5982\uFF1A\u8BA1\u65F6\u5668\u91CD\u7F6E\u3001\u65E5\u5FD7\u64CD\u4F5C\u3001\u9009\u4E3E\u3001\u5D29\u6E83\u6062\u590D\u6216\u4E0E\u590D\u5236\u72B6\u6001\u673A\u7684\u901A\u4FE1\u3002\u81F3\u5173\u91CD\u8981\u7684\u662F\uFF0C\u4E0D\u540C\u7C7B\u578B\u7684\u4E8B\u4EF6\u5C06\u4EE5\u4E0D\u540C\u7684\u9891\u7387\u53D1\u751F\uFF0C\u5982\u679C\u4E0D\u4EE5\u67D0\u79CD\u65B9\u5F0F\u4FEE\u526A\uFF0C\u53EF\u80FD\u4F1A\u5BFC\u81F4\u65E5\u5FD7\u8FC7\u4E8E\u5197\u957F\u3002</p><p>\u56E0\u6B64\uFF0C\u6211\u4EEC\u6700\u597D\u77E5\u9053\u8C01\u5728\u6253\u5370\u6BCF\u884C\uFF0C\u4EE5\u53CA\u6D88\u606F\u4E0E\u4EC0\u4E48\u4E3B\u9898\u6709\u5173\u3002\u6211\u4EEC\u7684\u76EE\u6807\u662F\u8BBE\u8BA1\u4E00\u79CD\u53EF\u89C6\u5316\u7F16\u7801\u8FD9\u4E9B\u4FE1\u606F\u7684\u65B9\u6CD5\u3002TL;DR\uFF1A\u6211\u4EEC\u5C06\u4F7FGo\u6253\u5370\u5177\u6709\u7279\u5B9A\u683C\u5F0F\u7684\u65E0\u804A\u65E5\u5FD7\uFF0C\u7136\u540E\u5229\u7528\u4E30\u5BCC\u7684Python\u5E93\u62BD\u8C61\u51FA\u6253\u5370\u683C\u5F0F\u4F18\u7F8E\u7684\u7EC8\u7AEF\u8F93\u51FA\u3002</p><h2 id="the-go-side" tabindex="-1"><a class="header-anchor" href="#the-go-side" aria-hidden="true">#</a> The Go Side</h2><p>\u867D\u7136\u5927\u591A\u6570\u5DE5\u5177\u5C06\u4F7F\u7528Python\u811A\u672C\u5B8C\u6210\uFF0C\u4F46Go\u65B9\u9762\u9700\u8981\u4E00\u4E9B\u5408\u4F5C\uFF0C\u4EE5\u786E\u4FDD\u6211\u4EEC\u4EE5\u6613\u4E8E\u89E3\u6790\u7684\u65B9\u5F0F\u5C06\u4FE1\u606F\u63D0\u4F9B\u7ED9\u4E0B\u6E38\u811A\u672C\u3002\u5207\u6362\u8F93\u51FA\u5197\u5927\u3002\u6211\u5B9E\u73B0\u7684\u4E00\u4E2A\u5FAE\u5C0F\u7684\u751F\u6D3B\u8D28\u91CF\u6539\u8FDB\u662F\u5207\u6362\u65E5\u5FD7\u5197\u9577\u6027\uFF0C\u800C\u65E0\u9700\u7F16\u8F91go\u4EE3\u7801\u3002\u7A0D\u540E\uFF0C\u8FD9\u4E5F\u5C06\u4F7F\u6211\u4EEC\u7684\u81EA\u52A8\u811A\u672C\u8FD0\u884C\u7A0B\u5E8F\u66F4\u5BB9\u6613\u63A7\u5236\u5197\u957F\u6027\u3002\u7531\u4E8E6.824\u6D4B\u8BD5\u4F7F\u7528go\u6D4B\u8BD5\uFF0C\u6211\u4EEC\u4E0D\u80FD\u76F4\u63A5\u4F7F\u7528\u547D\u4EE4\u884C\u53C2\u6570\u3002\u7136\u800C\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u7684\u662F\u73AF\u5883\u53D8\u91CF\u3002\u4EE5\u4E0B\u4EE3\u7801\u5C06\u8BBF\u95EEVERBOSE\u73AF\u5883\u53D8\u91CF\uFF0C\u4EE5\u786E\u5B9A\u662F\u5426\u9700\u8981\u8BE6\u7EC6\u65E5\u5FD7\u3002</p><div class="language-golang ext-golang line-numbers-mode"><pre class="language-golang"><code>// Retrieve the verbosity level from an environment variable
func getVerbosity() int {
	v := os.Getenv(&quot;VERBOSE&quot;)
	level := 0
	if v != &quot;&quot; {
		var err error
		level, err = strconv.Atoi(v)
		if err != nil {
			log.Fatalf(&quot;Invalid verbosity %v&quot;, v)
		}
	}
	return level
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>\u8BB0\u5F55topics</code>\u6211\u51B3\u5B9A\u4ECE\u6839\u672C\u4E0A\u6539\u53D8\u6211\u9009\u62E9\u7684printf\u51FD\u6570\uFF0C\u63A5\u53D7\u4E00\u4E2A\u4E3B\u9898\u4F5C\u4E3A\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u8BE5\u4E3B\u9898\u7F16\u7801\u6D88\u606F\u5C5E\u4E8E\u54EA\u4E2A\u7C7B\u522B\u3002\u7B2C\u4E00\u4E2A\u53C2\u6570\u672C\u8D28\u4E0A\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u4F46\u4E3A\u4E86\u4F7F\u4EE3\u7801\u66F4\u5BB9\u6613\u91CD\u6784\uFF08\u5E76\u4E14\u56E0\u4E3A\u6211\u4E0D\u559C\u6B22\u952E\u5165\u5F15\u53F7\uFF09\uFF0C\u6211\u58F0\u660E\u8BE5\u4E3B\u9898\u4E3A\u5E38\u91CF\u3002\u8FD9\u4E9B\u4E3B\u9898\u4E0E\u5B9E\u73B0\u7684\u4E0D\u540C\u90E8\u5206\u6709\u5173\uFF0C\u901A\u8FC7\u5236\u4F5C\u7EC6\u7C92\u5EA6\uFF0C\u6211\u4EEC\u5C06\u80FD\u591F\u7528\u4E0D\u540C\u7684\u989C\u8272\u8FC7\u6EE4\u3001\u641C\u7D22\u751A\u81F3\u7A81\u51FA\u663E\u793A\u5B83\u4EEC\u3002</p><div class="language-golang ext-golang line-numbers-mode"><pre class="language-golang"><code>type logTopic string
const (
	dClient  logTopic = &quot;CLNT&quot;
	dCommit  logTopic = &quot;CMIT&quot;
	dDrop    logTopic = &quot;DROP&quot;
	dError   logTopic = &quot;ERRO&quot;
	dInfo    logTopic = &quot;INFO&quot;
	dLeader  logTopic = &quot;LEAD&quot;
	dLog     logTopic = &quot;LOG1&quot;
	dLog2    logTopic = &quot;LOG2&quot;
	dPersist logTopic = &quot;PERS&quot;
	dSnap    logTopic = &quot;SNAP&quot;
	dTerm    logTopic = &quot;TERM&quot;
	dTest    logTopic = &quot;TEST&quot;
	dTimer   logTopic = &quot;TIMR&quot;
	dTrace   logTopic = &quot;TRCE&quot;
	dVote    logTopic = &quot;VOTE&quot;
	dWarn    logTopic = &quot;WARN&quot;
)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>\u6253\u5370\u529F\u80FD</code> Go\u7684\u6700\u540E\u4E00\u5757\u79FB\u52A8\u4EF6\u662F\u6211\u4EEC\u5C06\u7528\u4E8E\u8F6C\u50A8\u8F93\u51FA\u7684\u5B9E\u9645\u6253\u5370\u529F\u80FD\u3002 \u6211\u8C03\u7528\u6211\u7684Debug\uFF0C\u5B83\u6253\u5370\u5E26\u4E3B\u9898\u7684\u6D88\u606F\u548C\u7A0B\u5E8F\u5F00\u59CB\u8FD0\u884C\u4EE5\u6765\u7684\u6BEB\u79D2\u6570\u3002 \u6211\u7981\u7528\u4E86\u6240\u6709\u65E5\u5FD7\u8BB0\u5F55\u7684\u65E5\u671F\u65F6\u95F4\uFF0C\u56E0\u4E3A\u8BE5\u4FE1\u606F\u975E\u5E38\u5197\u4F59\uFF08\u6240\u6709\u6D4B\u8BD5\u6700\u591A\u53EA\u80FD\u901A\u8FC7\u51E0\u5206\u949F\uFF09\u3002\u6B64\u5916\uFF0C\u5728\u68C0\u67E5\u8BA1\u65F6\u5668\u76F8\u5173\u4E8B\u4EF6\u662F\u5426\u4EE5\u9884\u671F\u9891\u7387\u53D1\u751F\u65F6\uFF0C\u4EC5\u6253\u5370\u6BEB\u79D2\u5C31\u975E\u5E38\u6709\u7528\u3002</p><div class="language-golang ext-golang line-numbers-mode"><pre class="language-golang"><code>var debugStart time.Time
var debugVerbosity int

func init() {
	debugVerbosity = getVerbosity()
	debugStart = time.Now()

	log.SetFlags(log.Flags() &amp;^ (log.Ldate | log.Ltime))
}

func Debug(topic logTopic, format string, a ...interface{}) {
	if debug &gt;= 1 {
		time := time.Since(debugStart).Microseconds()
		time /= 100
		prefix := fmt.Sprintf(&quot;%06d %v &quot;, time, string(topic))
		format = prefix + format
		log.Printf(format, a...)
	}
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7F3A\u5C11\u7684\u4E00\u6761\u662F\u8C01\u5728\u53D1\u9001\u8FD9\u6761\u6D88\u606F\u3002\u6211\u76F4\u63A5\u5C06\u5176\u4F5C\u4E3A\u6253\u5370\u65F6\u7684\u524D\u51E0\u4E2A\u5B57\u7B26\u4F20\u9012\u3002\u4F8B\u5982\uFF0C</p><p><code> Debug(dTimer, &quot;S%d Leader, checking heartbeats&quot;, rf.me)</code></p><p>\u56E0\u6B64\uFF0C\u5982\u679C\u6211\u4EEC\u73B0\u5728\u8FD0\u884C\u65F6\u95F4\u957F\u4E00\u70B9\uFF08\u4F8B\u5982VERBOSE=1 go test-run TestBackup2B\uFF09\u8F93\u51FA\u770B\u8D77\u6765\u6709\u70B9\u50CF\u4E0B\u9762\u7684\u6458\u5F55\u3002</p><div class="language-log ext-log line-numbers-mode"><pre class="language-log"><code><span class="token number">008258</span> LOG2 S2 Saved Log <span class="token operator">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">)</span> <span class="token punctuation">[</span><span class="token operator">{</span><span class="token operator">&lt;</span>nil<span class="token operator">&gt;</span> <span class="token number">0</span><span class="token operator">}</span><span class="token punctuation">]</span>
<span class="token number">008256</span> VOTE S3 Granting Vote to S1 at T1
<span class="token number">008258</span> VOTE S1 <span class="token operator">&lt;</span><span class="token operator">-</span> S0 Got vote
<span class="token number">008258</span> VOTE S4 Granting Vote to S1 at T1
<span class="token number">008259</span> PERS S4 Saved State T<span class="token operator">:</span><span class="token number">1</span> VF<span class="token operator">:</span><span class="token number">1</span>
<span class="token number">008258</span> PERS S3 Saved State T<span class="token operator">:</span><span class="token number">1</span> VF<span class="token operator">:</span><span class="token number">1</span>
<span class="token number">008259</span> LOG2 S3 Saved Log <span class="token operator">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">)</span> <span class="token punctuation">[</span><span class="token operator">{</span><span class="token operator">&lt;</span>nil<span class="token operator">&gt;</span> <span class="token number">0</span><span class="token operator">}</span><span class="token punctuation">]</span>
<span class="token number">008259</span> VOTE S1 <span class="token operator">&lt;</span><span class="token operator">-</span> S2 Got vote
<span class="token number">008260</span> LEAD S1 Achieved Majority for T1 <span class="token operator">(</span><span class="token number">3</span><span class="token operator">)</span><span class="token punctuation">,</span> converting to Leader
<span class="token number">008260</span> TIMR S1 Broadcast<span class="token punctuation">,</span> reseting HBT
<span class="token number">008260</span> LOG1 S1 <span class="token operator">-</span><span class="token operator">&gt;</span> S0 Sending PLI<span class="token operator">:</span> <span class="token number">0</span> PLT<span class="token operator">:</span> <span class="token number">0</span> N<span class="token operator">:</span> <span class="token number">0</span> LC<span class="token operator">:</span> <span class="token number">0</span> <span class="token operator">-</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token number">008260</span> LOG1 S1 <span class="token operator">-</span><span class="token operator">&gt;</span> S2 Sending PLI<span class="token operator">:</span> <span class="token number">0</span> PLT<span class="token operator">:</span> <span class="token number">0</span> N<span class="token operator">:</span> <span class="token number">0</span> LC<span class="token operator">:</span> <span class="token number">0</span> <span class="token operator">-</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token number">008259</span> LOG2 S4 Saved Log <span class="token operator">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">)</span> <span class="token punctuation">[</span><span class="token operator">{</span><span class="token operator">&lt;</span>nil<span class="token operator">&gt;</span> <span class="token number">0</span><span class="token operator">}</span><span class="token punctuation">]</span>
<span class="token number">008261</span> LOG1 S1 <span class="token operator">-</span><span class="token operator">&gt;</span> S3 Sending PLI<span class="token operator">:</span> <span class="token number">0</span> PLT<span class="token operator">:</span> <span class="token number">0</span> N<span class="token operator">:</span> <span class="token number">0</span> LC<span class="token operator">:</span> <span class="token number">0</span> <span class="token operator">-</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token number">008262</span> LOG1 S1 <span class="token operator">-</span><span class="token operator">&gt;</span> S4 Sending PLI<span class="token operator">:</span> <span class="token number">0</span> PLT<span class="token operator">:</span> <span class="token number">0</span> N<span class="token operator">:</span> <span class="token number">0</span> LC<span class="token operator">:</span> <span class="token number">0</span> <span class="token operator">-</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token number">008262</span> TIMR S1 Leader<span class="token punctuation">,</span> checking heartbeats
<span class="token number">008263</span> TIMR S0 Resetting ELT<span class="token punctuation">,</span> received AppEnt T1
<span class="token number">008263</span> TIMR S3 Resetting ELT<span class="token punctuation">,</span> received AppEnt T1
<span class="token number">008264</span> TIMR S2 Resetting ELT<span class="token punctuation">,</span> received AppEnt T1
<span class="token number">008264</span> LOG2 S2 LOG<span class="token operator">:</span> <span class="token operator">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">)</span> <span class="token punctuation">[</span><span class="token operator">{</span><span class="token operator">&lt;</span>nil<span class="token operator">&gt;</span> <span class="token number">0</span><span class="token operator">}</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u6B64\uFF0C\u5BF9\u4E8E\u6BCF\u884C\uFF0C\u524D\u4E09\u5217\u90FD\u6307\u793A\uFF1A\u4E8B\u4EF6\u4F55\u65F6\u53D1\u751F\uFF0C\u5B83\u4E0E\u4EC0\u4E48\u4E3B\u9898\u76F8\u5173\uFF0C\u4EE5\u53CA\u54EA\u4E2A\u670D\u52A1\u5668\u6B63\u5728\u6253\u5370\u6D88\u606F\u3002\u5176\u4F59\u90E8\u5206\u4FDD\u7559\u4E3A\u81EA\u7531\u5F62\u5F0F\u3002</p><p><code>\u7F8E\u5316\u65E5\u5FD7\u3002</code>\u5230\u76EE\u524D\u4E3A\u6B62\uFF0C\u8F93\u51FA\u65E5\u5FD7\u770B\u8D77\u6765\u4ECD\u7136\u76F8\u5F53\u6697\u6DE1\u3002\u5B83\u4EEC\u770B\u8D77\u6765\u5F88\u5B9E\u7528\uFF0C\u4F46\u5F53\u60A8\u641C\u7D22\u4EE3\u7801\u4E2D\u5077\u5077\u6478\u6478\u7684\u9519\u8BEF\u65F6\uFF0C\u8F9B\u82E6\u8BFB\u6570\u767E\u884C\u4F1A\u5F88\u75DB\u82E6\u3002\u6211\u4EEC\u73B0\u5728\u5C06\u5728Python\u4E2D\u7F16\u5199\u65E5\u5FD7parser\u3001filter\u548Cpretty printer\u3002</p><p>\u867D\u7136Go\u662F6.824\u5B9E\u9A8C\u5BA4\u7684\u7EDD\u4F73\u8BED\u8A00\u9009\u62E9\uFF0C\u4F46\u5728\u811A\u672C\u7F16\u5199\u65B9\u9762\uFF0C\u5B83\u4E0D\u50CFPython\u90A3\u6837\u7B26\u5408\u4EBA\u4F53\u5DE5\u7A0B\u5B66\u3002\u6211\u51B3\u5B9A\u4F7F\u7528Python\u7684\u4E00\u4E2A\u4E3B\u8981\u539F\u56E0\u662FRich\u548CTyper\uFF0C\u8FD9\u662F\u51E0\u4E2A\u6F02\u4EAE\u7684\u5E93\uFF0C\u4F7F\u7F16\u5199\u7EC8\u7AEF\u7528\u6237\u754C\u9762\uFF08TUI\uFF09\u5E94\u7528\u7A0B\u5E8F\u53D8\u5F97\u8F7B\u800C\u6613\u4E3E\u3002</p><p>\u4EBA\u7C7B\u662F\u89C6\u89C9\u751F\u7269\uFF0C\u56E0\u6B64\u6700\u597D\u4F7F\u7528\u989C\u8272\u6216\u5217\u7B49\u89C6\u89C9\u5DE5\u5177\u6765\u7F16\u7801\u4E0D\u540C\u7C7B\u578B\u7684\u4FE1\u606F\u3002\u51CF\u5C11\u89E3\u6790\uFF0C\u8C01\u8BF4\u4E86\u4EC0\u4E48\uFF0C\u5C06\u5927\u5E45\u63D0\u9AD8\u60A8\u7684\u8C03\u8BD5\u6548\u7387\u7684\u65F6\u95F4\u3002\u7136\u800C\uFF0C\u5982\u679C\u4F60\u66FE\u7ECF\u5C1D\u8BD5\u8FC7\u4ECE\u7EC8\u7AEF\u8FDB\u884C\u6F02\u4EAE\u7684\u6253\u5370\uFF0C\u4F60\u73B0\u5728\u53EF\u80FD\u5DF2\u7ECF\u610F\u8BC6\u5230\u8FD9\u901A\u5E38\u611F\u89C9\u50CF\u4E00\u4EF6\u82E6\u5DEE\u4E8B\uFF0C\u4F60\u6700\u7EC8\u4F1A\u5199\u51FA\u975E\u5E38\u51CC\u4E71\u7684\u4EE3\u7801\u3002\u8FD9\u662FRich\u6765\u89E3\u6551\u7684\u5730\u65B9\u3002\u6839\u636E\u4ED6\u4EEC\u7684\u63CF\u8FF0\uFF0C\u201CRich\u662F\u4E00\u4E2APython\u5E93\uFF0C\u7528\u4E8E\u5728\u7EC8\u7AEF\u4E2D\u63D0\u4F9B\u4E30\u5BCC\u7684\u6587\u672C\u548C\u6F02\u4EAE\u7684\u683C\u5F0F\u201D\u3002\u5982\u679C\u60A8\u5FEB\u901F\u6D4F\u89C8\u4ED6\u4EEC\u7684\u6587\u6863\uFF0C\u60A8\u53EF\u80FD\u4F1A\u5BF9Rich\u63D0\u4F9B\u7684\u4F17\u591A\u529F\u80FD\u611F\u5230\u60CA\u8BB6\u3002\u6211\u4E0D\u4F1A\u8BE6\u7EC6\u8BA8\u8BBA\u5F88\u591A\u7EC6\u8282\uFF0C\u5982\u679C\u60A8\u6784\u5EFA\u9700\u8981\u663E\u793A\u7ED3\u6784\u5316\u6216\u4EA4\u4E92\u5F0F\u8F93\u51FA\u7684\u7EC8\u7AEFPython\u811A\u672C\uFF0C\u90A3\u6211\u5F3A\u70C8\u5EFA\u8BAE\u60A8\u67E5\u770BRich\u3002</p><p>\u5BF9\u4E8E\u6211\u4EEC\u7684\u60C5\u51B5\uFF0CRich\u63D0\u4F9B\u4E86\u4E00\u4E2A\u76F4\u89C2\u7684API\uFF0C\u7528\u4E8E\u5904\u7406\u6253\u5370\u5F69\u8272\u8F93\u51FA\u548C\u5C06\u6587\u672C\u683C\u5F0F\u5316\u4E3AN\u5217\u3002\u4F8B\u5982\uFF0Crich.print\uFF08\u201C[red]\u8FD9\u662F\u7EA2\u8272[/red]\u201D\uFF09\u5C06\u4F7F\u7528ANSI\u8F6C\u4E49\u4EE3\u7801\u5C06\u6240\u9644\u6587\u672C\u6253\u5370\u5230\u7EC8\u7AEF\uFF0C\u4F7F\u6587\u672C\u53D8\u7EA2\u3002\u548C\u5B83\u76F8\u5F53\u4E8Eecho -e \u201C\\033[91m\u201D\u7684bash\u76F8\u6BD4\uFF0C\u8FD9\u662F\u7EA2\u8272\\e[0m\uFF0C\u770B\u8D77\u6765\u66F4\u50CF\u662F\u65E0\u610F\u4E49\u7684\u5B57\u7B26\uFF0C\u8FD9\u4E2A\u9009\u62E9\u662F\u663E\u800C\u6613\u89C1\u7684\u3002</p>`,24),m=n("\u4F7F\u7528Rich\u7684\u539F\u8BED\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8F7B\u677E\u5730\u4E3A\u65E5\u5FD7\u6784\u5EFA\u6F02\u4EAE\u7684printer\u3002\u76F8\u5173\u7247\u6BB5\u5982\u4E0B\u6240\u793A\u3002\u4E3B\u8981\u5BF9\u5B9E\u73B0\u8FDB\u884C\u4E86\u8BC4\u8BBA\uFF0C\u91CD\u70B9\u4ECB\u7ECD\u4E86\u811A\u672C\u7684\u4E0D\u540C\u529F\u80FD\uFF0C\u5305\u62EC\uFF1A\u4E3B\u9898\u8FC7\u6EE4\u3001\u57FA\u4E8E\u4E3B\u9898\u7684\u7740\u8272\u548C\u5217\u6253\u5370\u3002\u5B8C\u6574\u7684\u811A\u672C\u53EF\u4EE5\u5728\u8FD9\u91CC\u627E\u5230("),b={href:"https://gist.github.com/JJGO/e64c0e8aedb5d464b5f79d3b12197338",target:"_blank",rel:"noopener noreferrer"},g=n("https://gist.github.com/JJGO/e64c0e8aedb5d464b5f79d3b12197338"),h=n(")\u3002\u4F7F\u7528\u6240\u9700\u7684\u8F6F\u4EF6\u5305\u8BBE\u7F6EPython\u73AF\u5883\u5E76\u5C06\u811A\u672C\u6DFB\u52A0\u5230\u60A8\u7684PATH\u4E2D\uFF0C\u7559\u7ED9\u8BFB\u8005\u4E00\u4E2A\u7EC3\u4E60\u3002"),q=e(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># [...] # Some boring imports</span>
<span class="token comment"># Mapping from topics to colors</span>
<span class="token comment"># See the disclaimer at the end of the post if you</span>
<span class="token comment"># want to use all RGB colors</span>
TOPICS <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;TIMR&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;bright_black&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;VOTE&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;bright_cyan&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;LEAD&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;yellow&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;TERM&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;LOG1&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;LOG2&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;cyan&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;CMIT&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;magenta&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;PERS&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;white&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;SNAP&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;bright_blue&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;DROP&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;bright_red&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;CLNT&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;bright_green&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;TEST&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;bright_magenta&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;INFO&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;bright_white&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;WARN&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;bright_yellow&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;ERRO&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;TRCE&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment"># [...] # Some boring command line parsing</span>

<span class="token comment"># We can take input from a stdin (pipes) or from a file</span>
input_ <span class="token operator">=</span> <span class="token builtin">file</span> <span class="token keyword">if</span> <span class="token builtin">file</span> <span class="token keyword">else</span> sys<span class="token punctuation">.</span>stdin
<span class="token comment"># Print just some topics or exclude some topics</span>
<span class="token keyword">if</span> just<span class="token punctuation">:</span>
    topics <span class="token operator">=</span> just
<span class="token keyword">if</span> ignore<span class="token punctuation">:</span>
    topics <span class="token operator">=</span> <span class="token punctuation">[</span>lvl <span class="token keyword">for</span> lvl <span class="token keyword">in</span> topics <span class="token keyword">if</span> lvl <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token builtin">set</span><span class="token punctuation">(</span>ignore<span class="token punctuation">)</span><span class="token punctuation">]</span>

topics <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>topics<span class="token punctuation">)</span>
console <span class="token operator">=</span> Console<span class="token punctuation">(</span><span class="token punctuation">)</span>
width <span class="token operator">=</span> console<span class="token punctuation">.</span>size<span class="token punctuation">.</span>width

panic <span class="token operator">=</span> <span class="token boolean">False</span>
<span class="token keyword">for</span> line <span class="token keyword">in</span> input_<span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token comment"># Assume format from Go output</span>
        time <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>line<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        topic <span class="token operator">=</span> line<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">:</span><span class="token number">11</span><span class="token punctuation">]</span>
        msg <span class="token operator">=</span> line<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># To ignore some topics</span>
        <span class="token keyword">if</span> topic <span class="token keyword">not</span> <span class="token keyword">in</span> topics<span class="token punctuation">:</span>
            <span class="token keyword">continue</span>

        <span class="token comment"># Debug() calls from the test suite aren&#39;t associated with</span>
        <span class="token comment"># any particular peer. Otherwise we can treat second column</span>
        <span class="token comment"># as peer id</span>
        <span class="token keyword">if</span> topic <span class="token operator">!=</span> <span class="token string">&quot;TEST&quot;</span> <span class="token keyword">and</span> n_columns<span class="token punctuation">:</span>
            i <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>msg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            msg <span class="token operator">=</span> msg<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span>

        <span class="token comment"># Colorize output by using rich syntax when needed</span>
        <span class="token keyword">if</span> colorize <span class="token keyword">and</span> topic <span class="token keyword">in</span> TOPICS<span class="token punctuation">:</span>
            color <span class="token operator">=</span> TOPICS<span class="token punctuation">[</span>topic<span class="token punctuation">]</span>
            msg <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;[</span><span class="token interpolation"><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span><span class="token string">]</span><span class="token interpolation"><span class="token punctuation">{</span>msg<span class="token punctuation">}</span></span><span class="token string">[/</span><span class="token interpolation"><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span><span class="token string">]&quot;</span></span>

        <span class="token comment"># Single column. Always the case for debug calls in tests</span>
        <span class="token keyword">if</span> n_columns <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">or</span> topic <span class="token operator">==</span> <span class="token string">&quot;TEST&quot;</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> msg<span class="token punctuation">)</span>
        <span class="token comment"># Multi column printing, timing is dropped to maximize horizontal</span>
        <span class="token comment"># space. Heavylifting is done through rich.column.Columns object</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            cols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;&quot;</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n_columns<span class="token punctuation">)</span><span class="token punctuation">]</span>
            msg <span class="token operator">=</span> <span class="token string">&quot;&quot;</span> <span class="token operator">+</span> msg
            cols<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> msg
            col_width <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>width <span class="token operator">/</span> n_columns<span class="token punctuation">)</span>
            cols <span class="token operator">=</span> Columns<span class="token punctuation">(</span>cols<span class="token punctuation">,</span> width<span class="token operator">=</span>col_width <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
                           equal<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> expand<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>cols<span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token comment"># Code from tests or panics does not follow format</span>
        <span class="token comment"># so we print it as is</span>
        <span class="token keyword">if</span> line<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;panic&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            panic <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token comment"># Output from tests is usually important so add a</span>
        <span class="token comment"># horizontal line with hashes to make it more obvious</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> panic<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span> <span class="token operator">*</span> console<span class="token punctuation">.</span>width<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u4E86\u8FD9\u4E2A\u811A\u672C\uFF0C\u6211\u4EEC\u73B0\u5728\u53EF\u4EE5\u628A\u5B83\u4ED8\u8BF8\u884C\u52A8\u4E86</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># You can just pipe the go test output into the script</span>
$ <span class="token assign-left variable">VERBOSE</span><span class="token operator">=</span><span class="token number">1</span> go <span class="token builtin class-name">test</span> -run InitialElection <span class="token operator">|</span> dslogs
<span class="token comment"># ... colored output will be printed</span>

<span class="token comment"># We can ignore verbose topics like timers or log changes</span>
$ <span class="token assign-left variable">VERBOSE</span><span class="token operator">=</span><span class="token number">1</span> go <span class="token builtin class-name">test</span> -run Backup <span class="token operator">|</span> dslogs -c <span class="token number">5</span> -i TIMR,DROP,LOG2
<span class="token comment"># ... colored output in 5 columns</span>

<span class="token comment"># Dumping output to a file can be handy to iteratively</span>
<span class="token comment"># filter topics and when failures are hard to reproduce</span>
$ <span class="token assign-left variable">VERBOSE</span><span class="token operator">=</span><span class="token number">1</span> go <span class="token builtin class-name">test</span> -run Figure8Unreliable <span class="token operator">&gt;</span> output.log
<span class="token comment"># Print from a file, selecting just two topics</span>
$ dslogs output.log -j CMIT,PERS
<span class="token comment"># ... colored output</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E\u4E00\u5F20\u56FE\u7247\u80DC\u8FC7\u5343\u8A00\u4E07\u8BED\uFF0C\u4EE5\u4E0B\u662F\u5E26\u6709\u6216\u4E0D\u5E26\u65E5\u5FD7\u7F8E\u5316\u7684\u7B80\u5355\u6D4B\u8BD5\u7684\u793A\u4F8B\uFF0C\u5728\u8FD0\u884C\u65F6\u7684\u6BD4\u8F83\u3002\u539F\u59CB\u8F93\u51FA\u770B\u8D77\u6765\u6709\u70B9\u4EE4\u4EBA\u751F\u754F\uFF1A</p><p>\u5728\u7F8E\u5316\u540E\uFF0C\u6211\u4EEC\u6709\u4E00\u4E2A\u975E\u5E38\u7B80\u5355\u7684\u6545\u4E8B\uFF1AS0\u6210\u4E3A\u5019\u9009\u4EBA\uFF0CS1\u548CS2\u66F4\u65B0terms\xA0\u5E76\u6295\u7968\u7ED9S0\u3002S0\u8F6C\u6362\u4E3A\u9886\u5BFC\u8005\uFF0C\u5E76\u5F00\u59CB\u53D1\u9001\u548C\u63A5\u6536\u5FC3\u8DF3\u3002 <img src="`+c+`" alt="xxx" loading="lazy"></p><p>\u8BF7\u6CE8\u610F\uFF0C\u7531\u4E8E\u4E00\u4E9B\u6D4B\u8BD5\u53EF\u80FD\u4F1A\u4EA7\u751F\u6570\u5343\u884C\u65E5\u5FD7\uFF0C\u56E0\u6B64\u4F7F\u7528\u67D0\u79CD\u5BFB\u547C\u673A\u7B56\u7565\u6765\u5FEB\u901F\u6D4F\u89C8\u5B83\u4EEC\u662F\u4E00\u4E2A\u597D\u4E3B\u610F\u3002\u6211\u662F\u4E00\u4E2A\u5FEB\u4E50\u7684tmux\u7528\u6237\uFF0C\u8FD9\u5C31\u662F\u6211\u8FD9\u6837\u505A\u7684\u65B9\u5F0F\u3002\u6211\u7684.tmux.conf\u4E2D\u786E\u5B9E\u6709\u4E00\u4E2A\u5386\u53F2\u8BB0\u5F55\u91CD\u5199\uFF08\u8BBE\u7F6E-g\u5386\u53F2\u9650\u5236100000\uFF09\uFF0C\u6240\u4EE5\u6211\u6709\u8DB3\u591F\u7684\u56DE\u6EDA\u3002\u4F7F\u7528\u66F4\u5C11\u662F\u884C\u4E0D\u901A\u7684\uFF0C\u56E0\u4E3A\u5B83\u4F1A\u6270\u4E71Rich\u6253\u5370\u989C\u8272\u548C\u68C0\u6D4B\u63A7\u5236\u53F0\u5BBD\u5EA6\u7684\u80FD\u529B\u3002\u60A8\u53EF\u4EE5\u5C1D\u8BD5Rich\u7684console.pager()\u4E0A\u4E0B\u6587\u7BA1\u7406\u5668\uFF0C\u5C3D\u7BA1\u4ECE\u7C97\u7565\u7684\u63A2\u7D22\u6765\u770B\uFF0C\u6211\u5FC5\u987B\u7B49\u5230\u6574\u4E2A\u8F93\u51FA\u5728\u90A3\u91CC\u624D\u80FD\u5F00\u59CB\u5206\u9875\u3002</p><p>\u6355\u6349\u7F55\u89C1\u7684\u6545\u969C</p><p>\u6211\u4EEC\u73B0\u5728\u6709\u4E86\u4E00\u4E2A\u5F88\u68D2\u7684\u5DE5\u5177\u6765\u68C0\u67E5\u65E5\u5FD7\u3002\u7136\u800C\uFF0C\u8FD0\u884C\u5931\u8D25\u7684\u65E5\u5FD7\u6709\u65F6\u5F88\u96BE\u627E\u5230\u3002\u6211\u6307\u7684\u662F\u8FD9\u6837\u4E00\u4E2A\u4E8B\u5B9E\uFF0C\u5373\u5F53\u60A8\u9010\u6B65\u4FEE\u590D\u5206\u5E03\u5F0F\u7CFB\u7EDF\u5B9E\u73B0\u4E2D\u7684\u9519\u8BEF\u65F6\uFF0C\u9519\u8BEF\u5C06\u53D8\u5F97\u66F4\u52A0\u7F55\u89C1\uFF0C\u5F53\u6240\u6709\u6D4B\u8BD5\u901A\u8FC7\u65F6\uFF0C\u9664\u4E86\u6BCF50\u6216100\u6B21\u8FD0\u884C\u5931\u8D25\u7684\u7279\u5B9A\u6D4B\u8BD5\u5916\uFF0C\u9519\u8BEF\u53EF\u80FD\u4F1A\u53D8\u5F97\u4EE4\u4EBA\u6CAE\u4E27\u3002</p><p>\u7406\u60F3\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u60F3\u8981\u4E00\u4E2A\u6267\u884C\u4EE5\u4E0B\u64CD\u4F5C\u7684\u811A\u672C\uFF1A</p><ul><li><p>\u6267\u884CN\u6B21\u4E00\u7CFB\u5217\u6D4B\u8BD5\u7684\u8FD0\u884C</p></li><li><p>\u4FDD\u5B58\u5931\u8D25\u7684\u8FD0\u884C\u4EE5\u4F9B\u4EE5\u540E\u68C0\u67E5</p></li><li><p>\u5E76\u884C\u8FD0\u884C\u6D4B\u8BD5\u3002</p></li></ul><p>\u5982\u4EE5\u4E0B\u7247\u6BB5\u6240\u793A\uFF0C\u901A\u8FC7\u4E00\u4E9B\u7B80\u5355\u7684bash\u811A\u672C\uFF0C\u524D\u4E24\u4E2A\u9879\u76EE\u5B9E\u9645\u4E0A\u5F88\u5BB9\u6613\u5B9E\u73B0\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/usr/bin/env bash</span>

<span class="token builtin class-name">trap</span> <span class="token string">&#39;exit 1&#39;</span> INT

<span class="token builtin class-name">echo</span> <span class="token string">&quot;Running test <span class="token variable">$1</span> for <span class="token variable">$2</span> iters&quot;</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">seq</span> <span class="token number">1</span> $2<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token builtin class-name">echo</span> -ne <span class="token string">&quot;<span class="token entity" title="\\r">\\r</span><span class="token variable">$i</span> / <span class="token variable">$2</span>&quot;</span>
    <span class="token assign-left variable">LOG</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$1_</span><span class="token variable">$i</span>.txt&quot;</span>
    <span class="token comment"># Failed go test return nonzero exit codes</span>
    go <span class="token builtin class-name">test</span> -run <span class="token variable">$1</span> <span class="token operator">&amp;&gt;</span> <span class="token variable">$LOG</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$?</span> -eq <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token function">rm</span> <span class="token variable">$LOG</span>
    <span class="token keyword">else</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Failed at iter <span class="token variable">$i</span>, saving log at <span class="token variable">$LOG</span>&quot;</span>
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u800C\uFF0C\u4E4B\u524D\u7684\u811A\u672C\u4E00\u6B21\u53EA\u80FD\u8FD0\u884C\u4E00\u4E2A\u6D4B\u8BD5\u3002\u5E76\u884C\u8FD0\u884C\u6D4B\u8BD5\u53EF\u4EE5\u663E\u8457\u52A0\u5FEB\u901F\u5EA6\uFF0C\u6709\u65F6\u8FD8\u901A\u8FC7\u5F15\u5165\u66F4\u591A\u7684\u5E76\u53D1\u6027\u6765\u63D0\u4F9B\u5E2E\u52A9\uFF0C\u5BFC\u81F4\u7F55\u89C1\u7684\u4EA4\u9519\u66F4\u9891\u7E41\u5730\u53D1\u751F\u3002</p><p>\u7136\u800C\uFF0C\u4F7F\u7528bash\u811A\u672C\u5B9E\u73B0\u5E76\u53D1\u5C5E\u6027\u8981\u56F0\u96BE\u5F97\u591A\uFF0C\u8FD9\u5C31\u662FPython\u518D\u6B21\u6551\u547D\u7684\u5730\u65B9\u3002\u867D\u7136Python\u6709\u4E00\u4E2A\u76F8\u5F53\u590D\u6742\u7684\u5E76\u53D1\u6545\u4E8B\uFF08\u7279\u522B\u662F\u4E0EGo\u76F8\u6BD4\uFF09\uFF0C\u4F46\u5B83\u786E\u5B9E\u901A\u8FC7concurrent.futures\u6A21\u5757\u63D0\u4F9B\u4E86\u4E00\u4E2A\u5B9E\u7528\u7684\u5E76\u53D1API\u3002\u56E0\u6B64\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5E76\u884C\u8FD0\u884CN\u6D4B\u8BD5\uFF0C\u7B49\u5230\u4E00\u4E2A\uFF08\u6216\u591A\u4E2A\uFF09\u5B8C\u6210\uFF0C\u5E76\u5C06\u65B0\u6D4B\u8BD5\u5206\u914D\u7ED9\u7A7A\u95F2\u7684\u5DE5\u4EBA\u3002\u6B64\u5916\uFF0C\u5728\u5206\u914D\u65B0\u4EFB\u52A1\u65F6\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5FAA\u73AF\u6D4F\u89C8\u6D4B\u8BD5\u7C7B\u578B\uFF0C\u5C31\u50CF\u6211\u4EEC\u4EE5\u5468\u671F\u6027\u65B9\u5F0F\u6309\u987A\u5E8F\u8FD0\u884C\u5B83\u4EEC\u4E00\u6837\u3002</p>`,14),f=n("\u4EE5\u4E0B\u662F\u4F7F\u7528Python\u5B9E\u73B0\u6240\u9700\u884C\u4E3A\u7684\u6838\u5FC3\u529F\u80FD\u7684\u7247\u6BB5\u3002\u6211\u5DF2\u7ECF\u5265\u79BB\u4E86CLI\u89E3\u6790\u548CUI\u66F4\u65B0\u90E8\u5206\u3002\u6211\u5199\u7684\u5B8C\u6574dstest\u811A\u672C\u53EF\u4EE5\u5728"),y={href:"https://gist.github.com/JJGO/0d73540ef7cc2f066cb535156b7cbdab",target:"_blank",rel:"noopener noreferrer"},T=n("\u8FD9\u91CC\u627E\u5230"),w=n("\u3002dstest --help\u5C06\u8BA9\u60A8\u4E86\u89E3\u5982\u4F55\u4F7F\u7528\u5B83\uFF0C\u4F46\u8FD9\u53D6\u51B3\u4E8E\u60A8\u4FEE\u6539\u5B83\u5E76\u6839\u636E\u60A8\u7684\u9700\u6C42\u8FDB\u884C\u8C03\u6574\u3002"),S=e(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># [...] Some boring imports</span>

<span class="token comment"># concurrent.futures requires tasks that are encapsulated in a function</span>
<span class="token keyword">def</span> <span class="token function">run_test</span><span class="token punctuation">(</span>test<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> race<span class="token punctuation">:</span> <span class="token builtin">bool</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    test_cmd <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;go&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&quot;-run=</span><span class="token interpolation"><span class="token punctuation">{</span>test<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> race<span class="token punctuation">:</span>
        test_cmd<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&quot;-race&quot;</span><span class="token punctuation">)</span>
    f<span class="token punctuation">,</span> path <span class="token operator">=</span> tempfile<span class="token punctuation">.</span>mkstemp<span class="token punctuation">(</span><span class="token punctuation">)</span>
    start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
    proc <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>test_cmd<span class="token punctuation">,</span> stdout<span class="token operator">=</span>f<span class="token punctuation">,</span> stderr<span class="token operator">=</span>f<span class="token punctuation">)</span>
    runtime <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start
    os<span class="token punctuation">.</span>close<span class="token punctuation">(</span>f<span class="token punctuation">)</span>
    <span class="token keyword">return</span> test<span class="token punctuation">,</span> path<span class="token punctuation">,</span> proc<span class="token punctuation">.</span>returncode<span class="token punctuation">,</span> runtime

<span class="token comment"># [...] # Some boring command line parsing and UI setup</span>

<span class="token comment"># This will collate tests, so they run in a balanced way</span>
tests <span class="token operator">=</span> itertools<span class="token punctuation">.</span>chain<span class="token punctuation">.</span>from_iterable<span class="token punctuation">(</span>itertools<span class="token punctuation">.</span>repeat<span class="token punctuation">(</span>tests<span class="token punctuation">,</span> iterations<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> ThreadPoolExecutor<span class="token punctuation">(</span>max_workers<span class="token operator">=</span>workers<span class="token punctuation">)</span> <span class="token keyword">as</span> executor<span class="token punctuation">:</span>

    futures <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">while</span> completed <span class="token operator">&lt;</span> total<span class="token punctuation">:</span>
        n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>futures<span class="token punctuation">)</span>
        <span class="token comment"># If there are fewer futures than workers assign them</span>
        <span class="token keyword">if</span> n <span class="token operator">&lt;</span> workers<span class="token punctuation">:</span>
            <span class="token keyword">for</span> test <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>islice<span class="token punctuation">(</span>tests<span class="token punctuation">,</span> workers<span class="token operator">-</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
                futures<span class="token punctuation">.</span>append<span class="token punctuation">(</span>executor<span class="token punctuation">.</span>submit<span class="token punctuation">(</span>run_test<span class="token punctuation">,</span> test<span class="token punctuation">,</span> race<span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment"># Wait until a task completes</span>
        done<span class="token punctuation">,</span> not_done <span class="token operator">=</span> wait<span class="token punctuation">(</span>futures<span class="token punctuation">,</span> return_when<span class="token operator">=</span>FIRST_COMPLETED<span class="token punctuation">)</span>

        <span class="token keyword">for</span> future <span class="token keyword">in</span> done<span class="token punctuation">:</span>
            test<span class="token punctuation">,</span> path<span class="token punctuation">,</span> rc<span class="token punctuation">,</span> runtime <span class="token operator">=</span> future<span class="token punctuation">.</span>result<span class="token punctuation">(</span><span class="token punctuation">)</span>

            dest <span class="token operator">=</span> <span class="token punctuation">(</span>output <span class="token operator">/</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>test<span class="token punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token punctuation">{</span>completed<span class="token punctuation">}</span></span><span class="token string">.log&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>as_posix<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token comment"># If the test failed, save the output for later analysis</span>
            <span class="token keyword">if</span> rc <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Failed test </span><span class="token interpolation"><span class="token punctuation">{</span>test<span class="token punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token punctuation">{</span>dest<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                output<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> parents<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
                shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>path<span class="token punctuation">,</span> dest<span class="token punctuation">)</span>

            os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
            completed <span class="token operator">+=</span> <span class="token number">1</span>
            futures <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>not_done<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u518D\u6B21\u6DF1\u5165Rich\uFF0C\u4EE5\u83B7\u5F97\u6F02\u4EAE\u7684\u8FDB\u5EA6\u6761\u548C\u6D4B\u8BD5\u8868\uFF0C\u6211\u4E0D\u5F97\u4E0D\u8BF4\uFF0C\u6211\u5BF9\u7ED3\u679C\u975E\u5E38\u6EE1\u610F\u3002\u8FD9\u5C31\u662F\u811A\u672C\u5728\u6267\u884C\u65F6\u7684\u6837\u5B50\uFF0C\u5728\u51FA\u73B0\u65F6\u62A5\u544A\u4E86\u5931\u8D25\u7684\u6D4B\u8BD5\u548C\u65E5\u5FD7\uFF1A</p><p>\u5B8C\u6210\u540E\uFF0C\u6211\u4EEC\u4F1A\u6536\u5230\u4E00\u4EFD\u62A5\u544A\uFF0C\u8BF4\u660E\u6709\u591A\u5C11\u6B21\u8FD0\u884C\u5931\u8D25\uFF0C\u4EE5\u53CA\u6BCF\u6B21\u6D4B\u8BD5\u7684\u5E73\u5747\u8FD0\u884C\u65F6\u95F4\u3002\u5728\u4E0B\u9762\u7684\u793A\u4F8B\u4E2D\uFF0C\u5FEB\u7167\u4F3C\u4E4E\u5B58\u5728\u7F55\u89C1\u7684\u95EE\u9898\uFF0C\u6211\u4EEC\u73B0\u5728\u6709\u5341\u51E0\u4E2A\u65E5\u5FD7\u8981\u8C03\u8BD5\u5B83\u3002</p><p>\u73B0\u5728\u53BB\u6784\u5EFA\u4F60\u81EA\u5DF1\u7684</p><p>\u6211\u5E0C\u671B\u8FD9\u4E2A\u6982\u8FF0\u6709\u5E2E\u52A9\uFF0C\u5E76\u4E3A\u5B9E\u73B0\u8C03\u8BD5\u5206\u5E03\u5F0F\u4EE3\u7801\u7684\u7F8E\u4E3D\u800C\u5B9E\u7528\u7684\u7EC8\u7AEF\u5DE5\u5177\u6240\u9700\u7684\u6784\u5EFA\u5757\u63D0\u4F9B\u4E86\u80CC\u666F\u548C\u793A\u4F8B\u3002\u7ED9Rich\u5F00\u53D1\u4EBA\u5458\u7684\u9053\u5177\uFF0C\u5982\u679C\u6CA1\u6709\u5B83\uFF0C\u6784\u5EFA\u8FD9\u4E9B\u5DE5\u5177\u5C06\u8017\u65F6\u4E00\u4E2A\u6570\u91CF\u7EA7\u3002</p><p>\u514D\u8D23\u58F0\u660E\uFF1ATruecolor\u652F\u6301</p><p>\u6211\u5FC5\u987B\u5C31\u65E5\u5FD7\u89E3\u6790\u5668\u811A\u672C\u6240\u9700\u7684\u989C\u8272\u652F\u6301\u63D0\u51FA\u514D\u8D23\u58F0\u660E\u3002\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C\u7EC8\u7AEF\u9ED8\u8BA4\u652F\u63018\u4F4D\u989C\u8272\u3002\u8FD9\u4E2A8\u4F4D\u7528\u4E8E\u6574\u4E2A\u989C\u8272\u503C\uFF0C\u56E0\u6B64\u60A8\u603B\u5171\u53EF\u4EE5\u83B7\u5F97256\u79CD\u989C\u8272\u3002\u7136\u800C\uFF0C\u5927\u591A\u6570UI\u8C03\u8272\u677F\uFF0C\u5982\u6587\u672C\u7F16\u8F91\u5668\uFF0C\u6BCF\u4E2A\u901A\u9053\u652F\u63018\u4F4D\uFF0C\u6BCF\u79CD\u989C\u8272\u603B\u8BA124\u4F4D\uFF0C\u5BFC\u81F4\u5E38\u89C1\u76841600\u4E07\u79CD\u989C\u8272\u9762\u989D\u3002</p><p>Rich\u6709\u6240\u67098\u4F4D\u989C\u8272\u7684\u540D\u79F0\uFF0C\u56E0\u6B64\u5982\u679C\u60A8\u575A\u6301\u4F7F\u75288\u4F4D\u8C03\u8272\u677F\uFF0C\u60A8\u53EF\u4EE5\u4F7F\u7528\u5B83\u4EEC\u800C\u4E0D\u662F\u6211\u4F7F\u7528\u7684RGB\u4EE3\u7801\u3002\u53E6\u4E00\u65B9\u9762\uFF0C\u5982\u679C\u60A8\u60F3\u542F\u752824\u4F4D\u989C\u8272\u6A21\u5F0F\uFF0C\u60A8\u5C06\u60F3\u5728\u5F53\u524D\u5DE5\u5177\u4E2D\u641C\u7D22truecolor\u652F\u6301\u3002\u5F88\u5927\u4E00\u90E8\u5206\u73B0\u4EE3\u7EC8\u7AEF\u5DE5\u5177\u786E\u5B9E\u652F\u6301\u66F4\u5E7F\u6CDB\u7684\u989C\u8272\u9635\u5217\uFF0C\u5C3D\u7BA1\u6709\u65F6\u5FC5\u987B\u624B\u52A8\u542F\u7528\u3002\u8BF7\u6CE8\u610F\uFF0C\u8981\u4F7Ftruecolor\u5DE5\u4F5C\uFF0C\u60A8\u9700\u8981\u6240\u6709\u79FB\u52A8\u90E8\u4EF6\u6765\u652F\u6301truecolor\u3002\u8FD9\u4F1A\u56E0\u8BBE\u7F6E\u800C\u5F02\uFF0C\u4F46\u901A\u5E38\u610F\u5473\u7740\uFF1A</p><p>\u60A8\u7684\u7EC8\u7AEF\u6A21\u62DF\u5668\uFF0C\u5373\u5141\u8BB8\u60A8\u8BBF\u95EE\u7EC8\u7AEF\u7684GUI\u5E94\u7528\u7A0B\u5E8F\uFF08\u901A\u5E38\u662FTerminal.app\u3001iTerm\u3001GNOME\u7EC8\u7AEF\u3001kitty\u3001alacritty\u3001Windows\u7EC8\u7AEF\u7B49\uFF09\u3002\u5927\u591A\u6570\u73B0\u4EE3\u7EC8\u7AEF\u652F\u6301truecolor\uFF0C\u4F46\u6709\u65F6\u5B83\u4EEC\u8981\u6C42\u60A8\u5C06TERM\u73AF\u5883\u53D8\u91CF\u6307\u5B9A\u4E3Axterm-256color\u3002</p><p>\u5982\u679C\u60A8\u4F7F\u7528tmux\u7B49\u7EC8\u7AEF\u591A\u8DEF\u590D\u7528\u5668\u3002\u540C\u6837\uFF0C\u6700\u6709\u53EF\u80FD\u652F\u6301\u4F46\u4E0D\u652F\u6301\u9ED8\u8BA4\u884C\u4E3A\u3002\u5728.tmux.conf\u4E2D\u6DFB\u52A0\u51E0\u884C\u5C31\u53EF\u4EE5\u4E86\u3002</p><p>\u60A8\u7684\u8FDC\u7A0B\u5BA2\u6237\u7AEF\uFF0C\u5982\u679C\u60A8\u6B63\u5728\u4F7F\u7528\u8FDC\u7A0B\u5BA2\u6237\u7AEF\u3002\u8FD9\u901A\u5E38\u662Fssh\uFF0C\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\u5E94\u8BE5\u5904\u7406truecolor\u3002\u5982\u679C\u60A8\u4F7F\u7528\u5176\u4ED6\u9009\u9879\uFF0C\u5982mosh\u3001Eternal Terminal\u6216\uFF08PuTTY\uFF09\uFF0C\u5219\u9700\u8981\u68C0\u67E5\u3002</p><p>\u5982\u679C\u60A8\u7684vim/neovim\u770B\u8D77\u6765\u5F88\u96BE\u8FC7\uFF0C\u53EA\u6709256\u79CD\u989C\u8272\uFF0C\u60A8\u53EF\u80FD\u8FD8\u60F3\u8003\u8651\u5728\u90A3\u91CC\u542F\u7528truecolor\u3002</p>`,12);function _(R,L){const a=o("ExternalLinkIcon");return i(),l("div",null,[s("p",null,[r,s("a",d,[k,t(a)])]),v,s("p",null,[m,s("a",b,[g,t(a)]),h]),q,s("p",null,[f,s("a",y,[T,t(a)]),w]),S])}var P=p(u,[["render",_],["__file","article1.html.vue"]]);export{P as default};
